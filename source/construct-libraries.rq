prefix owl: <http://www.w3.org/2002/07/owl#>
prefix skos: <http://www.w3.org/2004/02/skos/core#>
prefix sdo: <http://schema.org/>
prefix bibdb: <http://libris.kb.se/def/lib#>
prefix : <https://id.kb.se/vocab/>
base <https://libris.kb.se/library/>

construct {

    ?library a ?libtype ;
        :sameAs ?bdb_id ;
        :sigel ?sigel ;
        :name ?name ;
        :uri ?url ;
        :place ?place .

    ?place a :Place ;
        :label ?region ;
        :code ?municipality_code ;
        :isPartOf ?country ;
        :latitude ?lat ;
        :longitude ?long .

    ?country a :Country ;
        :code ?country_code .

} where {

    ?bdb_id
        bibdb:sigel ?sigel ;
        sdo:name ?name .
        # :organisation, sdo:address

    optional { ?bdb_id a ?type }

    optional {
        ?bdb_id sdo:url ?url .
        FILTER(?url != "" && ?url != "http://")
    }
    bind(if(?type = sdo:Library, :Library, :Bibliography) as ?libtype)

    optional {
        ?bdb_id bibdb:country_code ?country_code .
        FILTER(?country_code != "")
    }

    optional {
        ?bdb_id bibdb:municipality_code ?municipality_code .
        FILTER(?municipality_code != "")
    }

    optional {
        ?bdb_id bibdb:region ?region
    }

    optional {
        ?bdb_id sdo:latitude ?lat ; sdo:longitude ?long .
        FILTER(?lat > 0 && ?long > 0)
    }

    bind(iri(concat(str(<>), ?sigel)) as ?library)
    bind(if(bound(?region) || bound(?lat), bnode(), ?NO_place) as ?place)
    bind(if(bound(?place) && bound(?country_code), bnode(), ?NO_country) as ?country)
}
